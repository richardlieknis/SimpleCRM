{
    "sourceFile": "src/app/shared/services/deal.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1686933671473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1686934279844,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { Injectable } from '@angular/core';\n import { CollectionReference, DocumentData, Firestore, collection, collectionData } from '@angular/fire/firestore';\n import { Observable } from 'rxjs';\n+import { UserService } from './user.service';\n \n @Injectable({\n   providedIn: 'root'\n })\n@@ -9,9 +10,12 @@\n   private dealColl: CollectionReference<DocumentData>\n \n   constructor(\n     private firestore: Firestore,\n-  ) { this.dealColl = collection(this.firestore, 'deals'); }\n+    private userService: UserService,\n+  ) {\n+    this.dealColl = collection(this.firestore, 'deals');\n+  }\n \n   getDoc(): Observable<DocumentData[]> {\n     return collectionData(this.dealColl);\n   }\n"
                },
                {
                    "date": 1686945555075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,15 @@\n import { Injectable } from '@angular/core';\n-import { CollectionReference, DocumentData, Firestore, collection, collectionData } from '@angular/fire/firestore';\n+import { CollectionReference, DocumentData, Firestore, addDoc, collection, collectionData } from '@angular/fire/firestore';\n import { Observable } from 'rxjs';\n import { UserService } from './user.service';\n+import { Deal } from 'src/models/deal.class';\n \n @Injectable({\n   providedIn: 'root'\n })\n export class DealService {\n+  private deal = new Deal();\n   private dealColl: CollectionReference<DocumentData>\n \n   constructor(\n     private firestore: Firestore,\n@@ -18,5 +20,9 @@\n \n   getDoc(): Observable<DocumentData[]> {\n     return collectionData(this.dealColl);\n   }\n+\n+  createDoc() {\n+    addDoc((this.dealColl), this.deal.toJSON());\n+  }\n }\n"
                },
                {
                    "date": 1686946520674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     this.dealColl = collection(this.firestore, 'deals');\n   }\n \n   getDoc(): Observable<DocumentData[]> {\n-    return collectionData(this.dealColl);\n+    return collectionData(this.dealColl, { idField: 'id' });\n   }\n \n   createDoc() {\n     addDoc((this.dealColl), this.deal.toJSON());\n"
                },
                {
                    "date": 1686946704226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     this.dealColl = collection(this.firestore, 'deals');\n   }\n \n   getDoc(): Observable<DocumentData[]> {\n-    return collectionData(this.dealColl, { idField: 'id' });\n+    return collectionData(this.dealColl);\n   }\n \n   createDoc() {\n     addDoc((this.dealColl), this.deal.toJSON());\n"
                },
                {
                    "date": 1686947166117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,5 +24,14 @@\n \n   createDoc() {\n     addDoc((this.dealColl), this.deal.toJSON());\n   }\n+\n+  checkExistingId() {\n+    collectionData(this.dealColl, { idField: 'id' })\n+      .subscribe((data) => {\n+        data.forEach(deal => {\n+          console.log(deal['id']);\n+        })\n+      })\n+  }\n }\n"
                },
                {
                    "date": 1686947217213,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n   checkExistingId() {\n     collectionData(this.dealColl, { idField: 'id' })\n       .subscribe((data) => {\n         data.forEach(deal => {\n-          console.log(deal['id']);\n+          console.log(deal['ids']);\n         })\n       })\n   }\n }\n"
                },
                {
                    "date": 1686947223307,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     addDoc((this.dealColl), this.deal.toJSON());\n   }\n \n   checkExistingId() {\n-    collectionData(this.dealColl, { idField: 'id' })\n+    collectionData(this.dealColl, { idField: 'ids' })\n       .subscribe((data) => {\n         data.forEach(deal => {\n           console.log(deal['ids']);\n         })\n"
                },
                {
                    "date": 1686947231052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,12 +26,12 @@\n     addDoc((this.dealColl), this.deal.toJSON());\n   }\n \n   checkExistingId() {\n-    collectionData(this.dealColl, { idField: 'ids' })\n+    collectionData(this.dealColl, { idField: 'id' })\n       .subscribe((data) => {\n         data.forEach(deal => {\n-          console.log(deal['ids']);\n+          console.log(deal['id']);\n         })\n       })\n   }\n }\n"
                }
            ],
            "date": 1686933671473,
            "name": "Commit-0",
            "content": "import { Injectable } from '@angular/core';\nimport { CollectionReference, DocumentData, Firestore, collection, collectionData } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DealService {\n  private dealColl: CollectionReference<DocumentData>\n\n  constructor(\n    private firestore: Firestore,\n  ) { this.dealColl = collection(this.firestore, 'deals'); }\n\n  getDoc(): Observable<DocumentData[]> {\n    return collectionData(this.dealColl);\n  }\n}\n"
        }
    ]
}