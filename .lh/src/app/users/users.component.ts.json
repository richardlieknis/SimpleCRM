{
    "sourceFile": "src/app/users/users.component.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 34,
            "patches": [
                {
                    "date": 1683136251662,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1683136329256,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,15 @@\n import { Component } from '@angular/core';\n import { DialogAddUserComponent } from '../dialog-add-user/dialog-add-user.component';\n-import {MatDialog, MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n+import { MatDialog } from '@angular/material/dialog';\n+\n @Component({\n   selector: 'app-users',\n   templateUrl: './users.component.html',\n   styleUrls: ['./users.component.scss']\n })\n export class UsersComponent {\n-  username: string =\"\";\n+  username: string = \"\";\n \n   constructor(public dialog: MatDialog) {\n     \n   }\n"
                },
                {
                    "date": 1683138109920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,5 +22,7 @@\n     dialogRef.afterClosed().subscribe(result => {\n       console.log(result);\n     });\n   }\n+\n+  cancelDialog(){}\n }\n"
                },
                {
                    "date": 1683138130444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,6 +23,6 @@\n       console.log(result);\n     });\n   }\n \n-  cancelDialog(){}\n+  \n }\n"
                },
                {
                    "date": 1683216041918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,17 @@\n import { Component } from '@angular/core';\n import { DialogAddUserComponent } from '../dialog-add-user/dialog-add-user.component';\n import { MatDialog } from '@angular/material/dialog';\n+import { User } from 'src/models/user.class';\n \n @Component({\n   selector: 'app-users',\n   templateUrl: './users.component.html',\n   styleUrls: ['./users.component.scss']\n })\n export class UsersComponent {\n   username: string = \"\";\n+  user = new User();\n \n   constructor(public dialog: MatDialog) {\n     \n   }\n"
                },
                {
                    "date": 1683217013290,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,13 +17,13 @@\n   }\n \n   openDialog(): void {\n     const dialogRef = this.dialog.open(DialogAddUserComponent, {\n-      data: {name: this.username},\n+      data: {name: this.user.firstName},\n     });\n \n     dialogRef.afterClosed().subscribe(result => {\n-      console.log(result);\n+      console.log(this.user.firstName);\n     });\n   }\n \n   \n"
                },
                {
                    "date": 1683217536539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n       data: {name: this.user.firstName},\n     });\n \n     dialogRef.afterClosed().subscribe(result => {\n-      console.log(this.user.firstName);\n+      console.log(this.user.birthDate);\n     });\n   }\n \n   \n"
                },
                {
                    "date": 1683218239595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n       data: {name: this.user.firstName},\n     });\n \n     dialogRef.afterClosed().subscribe(result => {\n-      console.log(this.user.birthDate);\n+      \n     });\n   }\n \n   \n"
                },
                {
                    "date": 1683224499285,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,15 +16,9 @@\n     \n   }\n \n   openDialog(): void {\n-    const dialogRef = this.dialog.open(DialogAddUserComponent, {\n-      data: {name: this.user.firstName},\n-    });\n-\n-    dialogRef.afterClosed().subscribe(result => {\n-      \n-    });\n+      this.dialog.open(DialogAddUserComponent, {});\n   }\n \n   \n }\n"
                },
                {
                    "date": 1683298650378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,106 @@\n-import { Component } from '@angular/core';\n+import { AfterViewInit, Component, ViewChild } from '@angular/core';\n import { DialogAddUserComponent } from '../dialog-add-user/dialog-add-user.component';\n import { MatDialog } from '@angular/material/dialog';\n import { User } from 'src/models/user.class';\n+import { MatPaginator } from '@angular/material/paginator';\n+import { MatSort } from '@angular/material/sort';\n+import { MatTableDataSource } from '@angular/material/table';\n \n+\n+export interface UserData {\n+  id: string;\n+  name: string;\n+  progress: string;\n+  fruit: string;\n+}\n+\n+/** Constants used to fill up our data base. */\n+const FRUITS: string[] = [\n+  'blueberry',\n+  'lychee',\n+  'kiwi',\n+  'mango',\n+  'peach',\n+  'lime',\n+  'pomegranate',\n+  'pineapple',\n+];\n+const NAMES: string[] = [\n+  'Maia',\n+  'Asher',\n+  'Olivia',\n+  'Atticus',\n+  'Amelia',\n+  'Jack',\n+  'Charlotte',\n+  'Theodore',\n+  'Isla',\n+  'Oliver',\n+  'Isabella',\n+  'Jasper',\n+  'Cora',\n+  'Levi',\n+  'Violet',\n+  'Arthur',\n+  'Mia',\n+  'Thomas',\n+  'Elizabeth',\n+];\n+\n @Component({\n   selector: 'app-users',\n   templateUrl: './users.component.html',\n   styleUrls: ['./users.component.scss']\n })\n export class UsersComponent {\n   username: string = \"\";\n   user = new User();\n+  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit'];\n+  dataSource: MatTableDataSource<UserData>;\n \n+  @ViewChild(MatPaginator) paginator: MatPaginator;\n+  @ViewChild(MatSort) sort: MatSort;\n+\n   constructor(public dialog: MatDialog) {\n-    \n+    // Create 100 users\n+    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n+\n+    // Assign the data to the data source for the table to render\n+    this.dataSource = new MatTableDataSource(users);\n   }\n \n   openDialog(): void {\n       this.dialog.open(DialogAddUserComponent, {});\n   }\n \n-  \n+   ngAfterViewInit() {\n+    this.dataSource.paginator = this.paginator;\n+    this.dataSource.sort = this.sort;\n+  }\n+\n+  applyFilter(event: Event) {\n+    const filterValue = (event.target as HTMLInputElement).value;\n+    this.dataSource.filter = filterValue.trim().toLowerCase();\n+\n+    if (this.dataSource.paginator) {\n+      this.dataSource.paginator.firstPage();\n+    }\n+  }\n }\n+\n+\n+/** Builds and returns a new User. */\n+function createNewUser(id: number): UserData {\n+  const name =\n+    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\n+    ' ' +\n+    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\n+    '.';\n+\n+  return {\n+    id: id.toString(),\n+    name: name,\n+    progress: Math.round(Math.random() * 100).toString(),\n+    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\n+  };\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1683298721497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,10 +57,10 @@\n   user = new User();\n   displayedColumns: string[] = ['id', 'name', 'progress', 'fruit'];\n   dataSource: MatTableDataSource<UserData>;\n \n-  @ViewChild(MatPaginator) paginator: MatPaginator;\n-  @ViewChild(MatSort) sort: MatSort;\n+  @ViewChild(MatPaginator) paginator!: MatPaginator;\n+  @ViewChild(MatSort) sort!: MatSort;\n \n   constructor(public dialog: MatDialog) {\n     // Create 100 users\n     const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n"
                },
                {
                    "date": 1683300293410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,102 +5,20 @@\n import { MatPaginator } from '@angular/material/paginator';\n import { MatSort } from '@angular/material/sort';\n import { MatTableDataSource } from '@angular/material/table';\n \n-\n-export interface UserData {\n-  id: string;\n-  name: string;\n-  progress: string;\n-  fruit: string;\n-}\n-\n-/** Constants used to fill up our data base. */\n-const FRUITS: string[] = [\n-  'blueberry',\n-  'lychee',\n-  'kiwi',\n-  'mango',\n-  'peach',\n-  'lime',\n-  'pomegranate',\n-  'pineapple',\n-];\n-const NAMES: string[] = [\n-  'Maia',\n-  'Asher',\n-  'Olivia',\n-  'Atticus',\n-  'Amelia',\n-  'Jack',\n-  'Charlotte',\n-  'Theodore',\n-  'Isla',\n-  'Oliver',\n-  'Isabella',\n-  'Jasper',\n-  'Cora',\n-  'Levi',\n-  'Violet',\n-  'Arthur',\n-  'Mia',\n-  'Thomas',\n-  'Elizabeth',\n-];\n-\n @Component({\n   selector: 'app-users',\n   templateUrl: './users.component.html',\n   styleUrls: ['./users.component.scss']\n })\n export class UsersComponent {\n   username: string = \"\";\n   user = new User();\n-  displayedColumns: string[] = ['id', 'name', 'progress', 'fruit'];\n-  dataSource: MatTableDataSource<UserData>;\n \n-  @ViewChild(MatPaginator) paginator!: MatPaginator;\n-  @ViewChild(MatSort) sort!: MatSort;\n-\n   constructor(public dialog: MatDialog) {\n-    // Create 100 users\n-    const users = Array.from({length: 100}, (_, k) => createNewUser(k + 1));\n-\n-    // Assign the data to the data source for the table to render\n-    this.dataSource = new MatTableDataSource(users);\n   }\n \n   openDialog(): void {\n       this.dialog.open(DialogAddUserComponent, {});\n   }\n-\n-   ngAfterViewInit() {\n-    this.dataSource.paginator = this.paginator;\n-    this.dataSource.sort = this.sort;\n-  }\n-\n-  applyFilter(event: Event) {\n-    const filterValue = (event.target as HTMLInputElement).value;\n-    this.dataSource.filter = filterValue.trim().toLowerCase();\n-\n-    if (this.dataSource.paginator) {\n-      this.dataSource.paginator.firstPage();\n-    }\n-  }\n }\n-\n-\n-/** Builds and returns a new User. */\n-function createNewUser(id: number): UserData {\n-  const name =\n-    NAMES[Math.round(Math.random() * (NAMES.length - 1))] +\n-    ' ' +\n-    NAMES[Math.round(Math.random() * (NAMES.length - 1))].charAt(0) +\n-    '.';\n-\n-  return {\n-    id: id.toString(),\n-    name: name,\n-    progress: Math.round(Math.random() * 100).toString(),\n-    fruit: FRUITS[Math.round(Math.random() * (FRUITS.length - 1))],\n-  };\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1683316079188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n import { User } from 'src/models/user.class';\n import { MatPaginator } from '@angular/material/paginator';\n import { MatSort } from '@angular/material/sort';\n import { MatTableDataSource } from '@angular/material/table';\n+import { CollectionReference, DocumentData, Firestore, collection, collectionData } from '@angular/fire/firestore';\n \n @Component({\n   selector: 'app-users',\n   templateUrl: './users.component.html',\n@@ -13,12 +14,15 @@\n })\n export class UsersComponent {\n   username: string = \"\";\n   user = new User();\n+  private userCollection: CollectionReference<DocumentData>;\n \n-  constructor(public dialog: MatDialog) {\n+  constructor(public dialog: MatDialog, private firestore: Firestore) {\n+    this.userCollection = collection(this.firestore, 'users');\n   }\n \n+\n   openDialog(): void {\n       this.dialog.open(DialogAddUserComponent, {});\n   }\n }\n"
                },
                {
                    "date": 1683316347043,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-import { AfterViewInit, Component, ViewChild } from '@angular/core';\n+import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\n import { DialogAddUserComponent } from '../dialog-add-user/dialog-add-user.component';\n import { MatDialog } from '@angular/material/dialog';\n import { User } from 'src/models/user.class';\n import { MatPaginator } from '@angular/material/paginator';\n@@ -11,17 +11,25 @@\n   selector: 'app-users',\n   templateUrl: './users.component.html',\n   styleUrls: ['./users.component.scss']\n })\n-export class UsersComponent {\n+export class UsersComponent implements OnInit {\n   username: string = \"\";\n   user = new User();\n   private userCollection: CollectionReference<DocumentData>;\n \n   constructor(public dialog: MatDialog, private firestore: Firestore) {\n     this.userCollection = collection(this.firestore, 'users');\n   }\n \n+  ngOnInit(): void {\n+    collectionData(this.userCollection, { idField: 'id' })\n+      .subscribe((data) => {\n+        data.forEach(user => {\n+        console.log(user);\n+      })\n+    })\n+  }\n \n   openDialog(): void {\n       this.dialog.open(DialogAddUserComponent, {});\n   }\n"
                },
                {
                    "date": 1683316753186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n })\n export class UsersComponent implements OnInit {\n   username: string = \"\";\n   user = new User();\n+  allUsers: [] = [];\n   private userCollection: CollectionReference<DocumentData>;\n \n   constructor(public dialog: MatDialog, private firestore: Firestore) {\n     this.userCollection = collection(this.firestore, 'users');\n@@ -23,11 +24,9 @@\n \n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data) => {\n-        data.forEach(user => {\n-        console.log(user);\n-      })\n+        console.log(data);\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683316774359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n })\n export class UsersComponent implements OnInit {\n   username: string = \"\";\n   user = new User();\n-  allUsers: [] = [];\n+  allUsers = [];\n   private userCollection: CollectionReference<DocumentData>;\n \n   constructor(public dialog: MatDialog, private firestore: Firestore) {\n     this.userCollection = collection(this.firestore, 'users');\n@@ -24,9 +24,9 @@\n \n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data) => {\n-        console.log(data);\n+        this.allUsers = data;\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683316871562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n   }\n \n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n-      .subscribe((data) => {\n+      .subscribe((data: any) => {\n         this.allUsers = data;\n     })\n   }\n \n"
                },
                {
                    "date": 1683316944905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n })\n export class UsersComponent implements OnInit {\n   username: string = \"\";\n   user = new User();\n-  allUsers = [];\n+  allUsers: any = [];\n   private userCollection: CollectionReference<DocumentData>;\n \n   constructor(public dialog: MatDialog, private firestore: Firestore) {\n     this.userCollection = collection(this.firestore, 'users');\n"
                },
                {
                    "date": 1683403723405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,11 @@\n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         this.allUsers = data;\n+        data.forEach((user: { [x: string]: any; }) => {\n+          console.log(user['id']);\n+        });\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683404302631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n     this.userCollection = collection(this.firestore, 'users');\n   }\n \n   ngOnInit(): void {\n-    collectionData(this.userCollection, { idField: 'id' })\n+    collectionData(this.userCollection)\n       .subscribe((data: any) => {\n         this.allUsers = data;\n         data.forEach((user: { [x: string]: any; }) => {\n           console.log(user['id']);\n"
                },
                {
                    "date": 1683405917259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,13 +22,13 @@\n     this.userCollection = collection(this.firestore, 'users');\n   }\n \n   ngOnInit(): void {\n-    collectionData(this.userCollection)\n+    collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         this.allUsers = data;\n         data.forEach((user: { [x: string]: any; }) => {\n-          console.log(user['id']);\n+          this.allUsers.push(user['id']);\n         });\n     })\n   }\n \n"
                },
                {
                    "date": 1683406003626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,11 +25,9 @@\n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         this.allUsers = data;\n-        data.forEach((user: { [x: string]: any; }) => {\n-          this.allUsers.push(user['id']);\n-        });\n+        this.allUsers.push('id');\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683406025835,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         this.allUsers = data;\n-        this.allUsers.push('id');\n+        this.allUsers.push(data['id']);\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683406036492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,8 @@\n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         this.allUsers = data;\n-        this.allUsers.push(data['id']);\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683406057682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,9 @@\n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         this.allUsers = data;\n+        console.log(data);\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683406238206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         this.allUsers = data;\n-        console.log(data);\n+        console.log(['id']);\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683406307884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         this.allUsers = data;\n-        console.log(['id']);\n+        console.log(data[0]['id']);\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683407859956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         this.allUsers = data;\n         console.log(data[0]['id']);\n+        console.log(user);\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683407948806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         this.allUsers = data;\n         console.log(data[0]['id']);\n-        console.log(user);\n+        console.log(data);\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683408049134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,12 @@\n \n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n-        this.allUsers = data;\n+        data.forEach(user => {\n+          this.allUsers.push(user)\n+          \n+        });\n         console.log(data[0]['id']);\n         console.log(data);\n     })\n   }\n"
                },
                {
                    "date": 1683408080500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n \n   ngOnInit(): void {\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n-        data.forEach(user => {\n+        data.forEach((user: any) => {\n           this.allUsers.push(user)\n           \n         });\n         console.log(data[0]['id']);\n"
                },
                {
                    "date": 1683408114484,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         data.forEach((user: any) => {\n           this.allUsers.push(user)\n+          data.push(user['id']);\n           \n         });\n         console.log(data[0]['id']);\n         console.log(data);\n"
                },
                {
                    "date": 1683410370648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,8 +15,10 @@\n export class UsersComponent implements OnInit {\n   username: string = \"\";\n   user = new User();\n   allUsers: any = [];\n+  allIds: any = [];\n+\n   private userCollection: CollectionReference<DocumentData>;\n \n   constructor(public dialog: MatDialog, private firestore: Firestore) {\n     this.userCollection = collection(this.firestore, 'users');\n@@ -26,13 +28,13 @@\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         data.forEach((user: any) => {\n           this.allUsers.push(user)\n-          data.push(user['id']);\n+          this.allIds.push(user['id']);\n           \n         });\n         console.log(data[0]['id']);\n-        console.log(data);\n+        console.log(this.allIds);\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683410431958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,10 +31,8 @@\n           this.allUsers.push(user)\n           this.allIds.push(user['id']);\n           \n         });\n-        console.log(data[0]['id']);\n-        console.log(this.allIds);\n     })\n   }\n \n   openDialog(): void {\n"
                },
                {
                    "date": 1683410896250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,10 +28,9 @@\n     collectionData(this.userCollection, { idField: 'id' })\n       .subscribe((data: any) => {\n         data.forEach((user: any) => {\n           this.allUsers.push(user)\n-          this.allIds.push(user['id']);\n-          \n+          this.allIds.push(user['id']);          \n         });\n     })\n   }\n \n"
                }
            ],
            "date": 1683136251662,
            "name": "Commit-0",
            "content": "import { Component } from '@angular/core';\nimport { DialogAddUserComponent } from '../dialog-add-user/dialog-add-user.component';\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.scss']\n})\nexport class UsersComponent {\n  username: string =\"\";\n\n  constructor(public dialog: MatDialog) {\n    \n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(DialogAddUserComponent, {\n      data: {name: this.username},\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n    });\n  }\n}\n"
        }
    ]
}