{
    "sourceFile": "src/app/login/sign-in/services/authentication.service.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1683733216724,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1683735633527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,9 @@\n     if (code === \"auth/user-not-found\") {\r\n       return \"User not found.\";\r\n     }\r\n     if (code === \"auth/wrong-password\") {\r\n-      return \"User not found.\";\r\n+      return \"Wrong password.\";\r\n     }\r\n     return message;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1685293934432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,12 +1,15 @@\n import { Injectable } from '@angular/core';\r\n+import { GoogleAuthProvider, getAuth, signInWithPopup } from '@angular/fire/auth';\r\n import { AngularFireAuth } from '@angular/fire/compat/auth';\r\n import { catchError, from, Observable, of, throwError } from 'rxjs';\r\n \r\n @Injectable({\r\n   providedIn: 'root'\r\n })\r\n export class AuthenticationService {\r\n+  provider = new GoogleAuthProvider();\r\n+  public tokenName: string = 'token';\r\n \r\n   constructor(\r\n     private auth: AngularFireAuth\r\n   ) { }\r\n@@ -28,8 +31,29 @@\n       )\r\n     );\r\n   }\r\n \r\n+  signInWithGoogle() {\r\n+    const auth = getAuth();\r\n+    signInWithPopup(auth, this.provider)\r\n+      .then((result) => {\r\n+        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n+        const token = credential?.accessToken;\r\n+        const user = result.user;\r\n+        localStorage.setItem(this.tokenName, 'token');\r\n+        console.log(\"TOKEN: \" + token, \"USER: \" + user.toJSON);\r\n+    })\r\n+  }\r\n+\r\n+  isLoggedIn() {\r\n+    console.log(\"test\");\r\n+    return localStorage.getItem(this.tokenName) != null;\r\n+  }\r\n+\r\n+  logout() {\r\n+    localStorage.removeItem(this.tokenName);\r\n+  }\r\n+\r\n   private translateFirebaseErrorMessage({code, message}: FirebaseError) {\r\n     if (code === \"auth/user-not-found\") {\r\n       return \"User not found.\";\r\n     }\r\n"
                },
                {
                    "date": 1685296768017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,8 @@\n     })\r\n   }\r\n \r\n   isLoggedIn() {\r\n-    console.log(\"test\");\r\n     return localStorage.getItem(this.tokenName) != null;\r\n   }\r\n \r\n   logout() {\r\n"
                },
                {
                    "date": 1685305853527,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import { Injectable } from '@angular/core';\r\n import { GoogleAuthProvider, getAuth, signInWithPopup } from '@angular/fire/auth';\r\n import { AngularFireAuth } from '@angular/fire/compat/auth';\r\n+import { Router } from '@angular/router';\r\n import { catchError, from, Observable, of, throwError } from 'rxjs';\r\n \r\n @Injectable({\r\n   providedIn: 'root'\r\n@@ -10,9 +11,10 @@\n   provider = new GoogleAuthProvider();\r\n   public tokenName: string = 'token';\r\n \r\n   constructor(\r\n-    private auth: AngularFireAuth\r\n+    private auth: AngularFireAuth,\r\n+    private router: Router\r\n   ) { }\r\n \r\n   signIn(params: SignIn): Observable<any> {\r\n     return from(this.auth.signInWithEmailAndPassword(\r\n@@ -35,8 +37,9 @@\n   signInWithGoogle() {\r\n     const auth = getAuth();\r\n     signInWithPopup(auth, this.provider)\r\n       .then((result) => {\r\n+        this.router.navigateByUrl('home/dashboard');\r\n         const credential = GoogleAuthProvider.credentialFromResult(result);\r\n         const token = credential?.accessToken;\r\n         const user = result.user;\r\n         localStorage.setItem(this.tokenName, 'token');\r\n"
                },
                {
                    "date": 1685352080178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,17 @@\n       )\r\n     );\r\n   }\r\n \r\n+  signUp(params: SignIn): Observable<any> {\r\n+    return from(this.auth.createUserWithEmailAndPassword(params.email, params.password))\r\n+      .pipe(\r\n+        catchError((error: FirebaseError) =>\r\n+          throwError(() => new Error(this.translateFirebaseErrorMessage(error)))\r\n+        )\r\n+    )\r\n+  }\r\n+\r\n   recoverPassword(email: string): Observable<void> {\r\n     return from(this.auth.sendPasswordResetEmail(email)).pipe(\r\n       catchError((error: FirebaseError) => \r\n         throwError(() => new Error(this.translateFirebaseErrorMessage(error)))\r\n"
                },
                {
                    "date": 1685352507956,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,9 @@\n     );\r\n   }\r\n \r\n   signUp(params: SignIn): Observable<any> {\r\n+    console.log(\"ACC CREATED\");\r\n     return from(this.auth.createUserWithEmailAndPassword(params.email, params.password))\r\n       .pipe(\r\n         catchError((error: FirebaseError) =>\r\n           throwError(() => new Error(this.translateFirebaseErrorMessage(error)))\r\n"
                },
                {
                    "date": 1685352543046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,8 @@\n     );\r\n   }\r\n \r\n   signUp(params: SignIn): Observable<any> {\r\n-    console.log(\"ACC CREATED\");\r\n     return from(this.auth.createUserWithEmailAndPassword(params.email, params.password))\r\n       .pipe(\r\n         catchError((error: FirebaseError) =>\r\n           throwError(() => new Error(this.translateFirebaseErrorMessage(error)))\r\n"
                }
            ],
            "date": 1683733216724,
            "name": "Commit-0",
            "content": "import { Injectable } from '@angular/core';\r\nimport { AngularFireAuth } from '@angular/fire/compat/auth';\r\nimport { catchError, from, Observable, of, throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthenticationService {\r\n\r\n  constructor(\r\n    private auth: AngularFireAuth\r\n  ) { }\r\n\r\n  signIn(params: SignIn): Observable<any> {\r\n    return from(this.auth.signInWithEmailAndPassword(\r\n      params.email, params.password\r\n    )).pipe(\r\n      catchError((error: FirebaseError) => \r\n        throwError(() => new Error(this.translateFirebaseErrorMessage(error)))\r\n      )\r\n    );\r\n  }\r\n\r\n  recoverPassword(email: string): Observable<void> {\r\n    return from(this.auth.sendPasswordResetEmail(email)).pipe(\r\n      catchError((error: FirebaseError) => \r\n        throwError(() => new Error(this.translateFirebaseErrorMessage(error)))\r\n      )\r\n    );\r\n  }\r\n\r\n  private translateFirebaseErrorMessage({code, message}: FirebaseError) {\r\n    if (code === \"auth/user-not-found\") {\r\n      return \"User not found.\";\r\n    }\r\n    if (code === \"auth/wrong-password\") {\r\n      return \"User not found.\";\r\n    }\r\n    return message;\r\n  }\r\n\r\n}\r\n\r\ntype SignIn = {\r\n  email: string;\r\n  password: string;\r\n}\r\n\r\ntype FirebaseError = {\r\n  code: string;\r\n  message: string\r\n};"
        }
    ]
}